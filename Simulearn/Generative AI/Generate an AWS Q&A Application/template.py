def sagemaker_faqs_template(context):
    template = f"""
    Below is the SageMaker Low-code ML FAQ:

    Q: What is Amazon SageMaker Canvas?
    SageMaker Canvas is a no-code service with an intuitive, point-and-click interface that lets you create highly accurate ML-based predictions from your data. SageMaker Canvas lets you access and combine data from a variety of sources using a drag-and-drop user interface, automatically cleaning and preparing data to minimize manual cleanup. SageMaker Canvas applies a variety of state-of-the-art ML algorithms to find highly accurate predictive models and provides an intuitive interface to make predictions. You can use SageMaker Canvas to make much more precise predictions in a variety of business applications and easily collaborate with data scientists and analysts in your enterprise by sharing your models, data, and reports.

    Q: What is Amazon SageMaker Autopilot?
    SageMaker Autopilot is the industry’s first automated machine learning capability that gives you complete control and visibility into your ML models. SageMaker Autopilot automatically inspects raw data, applies feature processors, picks the best set of algorithms, trains and tunes multiple models, tracks their performance, and then ranks the models based on performance, all with just a few clicks. The result is the best-performing model that you can deploy at a fraction of the time normally required to train the model. You get full visibility into how the model was created and what’s in it, and SageMaker Autopilot integrates with SageMaker Studio. You can explore up to 50 different models generated by SageMaker Autopilot inside SageMaker Studio so it’s easy to pick the best model for your use case. SageMaker Autopilot can be used by people without ML experience to easily produce a model, or it can be used by experienced developers to quickly develop a baseline model on which teams can further iterate.

    Q: How does SageMaker Canvas pricing work?
    With SageMaker Canvas, you pay based on usage. SageMaker Canvas lets you interactively ingest, explore, and prepare your data from multiple sources, train highly accurate ML models with your data, and generate predictions. There are two components that determine your bill: session charges based on the number of hours for which SageMaker Canvas is used or logged into, and charges for training the model based on the size of the dataset used to build the model.

    Q: Can I stop an Amazon SageMaker Autopilot job manually?
    Yes. You can stop a job at any time. When a SageMaker Autopilot job is stopped, all ongoing trials will be stopped and no new trial will be started.

    Generate a multiple choice quiz with the following format: 
    
    Quiz:

    Q1: <Question 1 text>
    a. <Option 1 for Question 1>
    b. <Option 2 for Question 1>
    c. <Option 3 for Question 1>
    d. <Option 4 for Question 1>

    Correct Answer: <Correct option letter for Question 1>.

    Q2: <Question 2 text>
    a. <Option 1 for Question 2>
    b. <Option 2 for Question 2>
    c. <Option 3 for Question 2>
    d. <Option 4 for Question 2>

    Correct Answer: <Correct option letter for Question 2>.

    ... (Repeat the same format for all questions)
    
    Base it on this context: {{context}}
    """
    return template

def bedrock_faqs_template(context):
    template = f"""
    Below is the Bedrock FAQ:

    Q: What is Amazon Bedrock?
    Amazon Bedrock is a fully managed service that offers a choice of high-performing foundation models (FMs) along with a broad set of capabilities that you need to build generative AI applications, simplifying development with security, privacy, and responsible AI. With the comprehensive capabilities of Amazon Bedrock, you can experiment with a variety of top FMs, customize them privately with your data using techniques such as fine-tuning and retrieval-augmented generation (RAG), and create managed agents that execute complex business tasks—from booking travel and processing insurance claims to creating ad campaigns and managing inventory—all without writing any code. Since Amazon Bedrock is serverless, you don't have to manage any infrastructure, and you can securely integrate and deploy generative AI capabilities into your applications using the AWS services you are already familiar with.

    Q: Which FMs are available on Amazon Bedrock?
    Amazon Bedrock customers can choose from some of the most cutting-edge FMs available today. This includes Anthropic's Claude, AI21 Labs' Jurassic-2, Stability AI's Stable Diffusion, Cohere's Command and Embed, Meta's Llama 2, and the Amazon Titan language and embeddings models.

    Q: How can I get started with Amazon Bedrock?
    With the serverless experience of Amazon Bedrock, you can quickly get started. Navigate to Amazon Bedrock in the AWS Management Console and try out the FMs in the playground. You can also create an agent and test it in the console. Once you’ve identified your use case, you can easily integrate the FMs into your applications using AWS tools without having to manage any infrastructure.

    Q: What are the most common use cases for Amazon Bedrock?
    You can quickly get started with use cases: Create new pieces of original content, such as short stories, essays, social media posts, and web page copy. Search, find, and synthesize information to answer questions from a large corpus of data. Create realistic and artistic images of various subjects, environments, and scenes from language prompts. Help customers find what they’re looking for with more relevant and contextual product recommendations than word matching. Get a summary of textual content such as articles, blog posts, books, and documents to get the gist without having to read the full content.

    Generate a multiple choice quiz with the following format: 
    
    Quiz:

    Q1: <Question 1 text>
    a. <Option 1 for Question 1>
    b. <Option 2 for Question 1>
    c. <Option 3 for Question 1>
    d. <Option 4 for Question 1>

    Correct Answer: <Correct option letter for Question 1>.

    Q2: <Question 2 text>
    a. <Option 1 for Question 2>
    b. <Option 2 for Question 2>
    c. <Option 3 for Question 2>
    d. <Option 4 for Question 2>

    Correct Answer: <Correct option letter for Question 2>.

    ... (Repeat the same format for all questions)
    
    Base it on this context: {{context}}
    """
    return template

def bedrock_rag_faqs_template(context):
    template = f"""
    Below is the Bedrock RAG FAQ:

    Q: What types of data formats are accepted by Knowledge Bases for Amazon Bedrock?
    Supported data formats include .pdf, .txt, .md, .html, .doc and .docx, .csv, .xls, and .xlsx files. Files must be uploaded to Amazon S3. Point to the location of your data in Amazon S3, and Knowledge Bases for Amazon Bedrock takes care of the entire ingestion workflow into your vector database.

    Q: Which embeddings model is used to convert documents into embeddings (vectors)?
    At present, Knowledge Bases for Amazon Bedrock uses the latest version of the Amazon Titan Text Embeddings model available in Amazon Bedrock. The Amazon Titan Text Embeddings model supports 8K tokens and 25+ languages and creates embeddings of 1,536 dimension size. 

    Q: Which vector databases are supported by Knowledge Bases for Amazon Bedrock?
    Knowledge Bases for Amazon Bedrock takes care of the entire ingestion workflow of converting your documents into embeddings (vector) and storing the embeddings in a specialized vector database. Knowledge Bases for Amazon Bedrock supports popular databases for vector storage, including vector engine for Amazon OpenSearch Serverless, Pinecone, Redis Enterprise Cloud, Amazon Aurora (coming soon), and MongoDB (coming soon). If you do not have an existing vector database, Amazon Bedrock creates an OpenSearch Serverless vector store for you.

    Q: Is it possible to do a periodic or event-driven sync from Amazon S3 to Knowledge Bases for Amazon Bedrock?
    Depending on your use case, you can use Amazon EventBridge to create a periodic or event-driven sync between Amazon S3 and Knowledge Bases for Amazon Bedrock.

    Generate a multiple choice quiz with the following format: 
    
    Quiz:

    Q1: <Question 1 text>
    a. <Option 1 for Question 1>
    b. <Option 2 for Question 1>
    c. <Option 3 for Question 1>
    d. <Option 4 for Question 1>

    Correct Answer: <Correct option letter for Question 1>.

    Q2: <Question 2 text>
    a. <Option 1 for Question 2>
    b. <Option 2 for Question 2>
    c. <Option 3 for Question 2>
    d. <Option 4 for Question 2>

    Correct Answer: <Correct option letter for Question 2>.

    ... (Repeat the same format for all questions)
    
    Base it on this context: {{context}}
    """
    return template